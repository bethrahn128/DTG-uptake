<!---
* obviously path has to be adapted
cd "C:\projects\IeDEA_SA256\analyses"

* then use this command to create html output ruunning everything below; takes some time
dyndoc "07_st-crreg.txt", saving("..\docs\07_st-crreg.html") replace embedimage
-->

<!--- ----------------------------------------------------------- -->

## Testing Stata on DTG uptake data 

<!--- ----------------------------------------------------------- -->

### Data preps 

`tblBAS.dta` dataset prepared in R using `01_data-preps.Rmd` script.  

~~~~
<<dd_do>>
use "..\data\tblBAS.dta", clear

drop if program == "HLABISA"
drop if program == "AfA"

* country to factor
encode country, g(f_country)

* age & sex combination
ta sex age_cat2, m
egen sex_age = group(sex age_cat2), lab
ta sex_age, m 
<</dd_do>>
~~~~

### Sample data for testing 

~~~~
<<dd_do>>
g random = runiform()
sort random
g insample = _n <= 10000
drop random

ta dtg insample, m col

* !!!! only for testing  !!!!
* keep if insample
<</dd_do>>
~~~~

### DTG dates *per program* (official)

~~~~
<<dd_do>>
su dtg_min_program, f

tabstat dtg_min_program, statistics( min ) by(program) format(%td)
tabstat dtg_min_program, statistics( min ) by(country) format(%td)
<</dd_do>>
~~~~

### DTG dates per program (data driven)

~~~~
<<dd_do>>
tabstat dtg_min_pat, statistics( min ) by(program) format(%td)
tabstat dtg_min_pat, statistics( min ) by(country) format(%td)
<</dd_do>>
~~~~

<!--- ----------------------------------------------------------- -->

### Competing risk

#### Recalculating outcome 

Patients without DTG switch, who *died, were LTFU or trasferred* are treated as **competing risk** category. 

~~~~
<<dd_do>>
g dtg_comp = dtg

replace dtg_comp = 2 if rev_outcome == "Death" & dtg == 0 
replace dtg_comp = 2 if rev_outcome == "LTFU" & dtg == 0 
replace dtg_comp = 2 if rev_outcome == "Transfer" & dtg == 0 

ta dtg dtg_comp, m
ta rev_outcome if dtg_comp == 2, m
<</dd_do>>
~~~~

#### `stset` and management

~~~~
<<dd_do>>
* if origin() & enter() needed?
* stset end_fu, fail(dtg_comp == 1) origin(time recart_d) enter(time start_fu) scale(365.25)

stset end_fu, fail(dtg_comp == 1) origin(time start_fu) scale(365.25)
<</dd_do>>
~~~~

FIXME: small amount of observations with problematic dates.  

~~~~
<<dd_do>>
ta _st, m
* br if _st == 0
drop if _st == 0
<</dd_do>>
~~~~

Summary of stset dataset  

~~~~
<<dd_do>>
stdescribe
<</dd_do>>
~~~~

~~~~
<<dd_do>>
bysort f_country: stdescribe
<</dd_do>>
~~~~

~~~~
<<dd_do>>
bysort sex_age: stdescribe
<</dd_do>>
~~~~

#### Regression 1 

~~~~
<<dd_do>>
stcrreg b5.f_country i.sex i.age_cat2, base compete(dtg_comp == 2) nopvalues cformat(%9,2f)
<</dd_do>>
~~~~

<<dd_do:quietly>>
stcurve, cif 
<</dd_do>>

<<dd_graph: saving("cif_1_1.png") replace height(300)>>

<<dd_do:quietly>>
stcurve, cif at(f_country = (1 2 3 4 5 6))
<</dd_do>>

<<dd_graph: saving("cif_1_2.png") replace height(300)>>

<<dd_do:quietly>>
stcurve, cif at(sex = (1 2))
<</dd_do>>

<<dd_graph: saving("cif_1_3.png") replace height(300)>>

<<dd_do:quietly>>
stcurve, cif at(age_cat2 = (1 2))
<</dd_do>>

<<dd_graph: saving("cif_1_4.png") replace height(300)>>

#### Regression 2 

~~~~
<<dd_do>>
stcrreg b5.f_country i.sex_age, base compete(dtg_comp == 2) nopvalues cformat(%9,2f)
<</dd_do>>
~~~~

<<dd_do:quietly>>
stcurve, cif 
<</dd_do>>

<<dd_graph: saving("cif_2_1.png") replace height(300)>>

<<dd_do:quietly>>
stcurve, cif at(f_country = (1 2 3 4 5 6))
<</dd_do>>

<<dd_graph: saving("cif_2_2.png") replace height(300)>>

<<dd_do:quietly>>
stcurve, cif at(sex_age = (1 2 3 4))
<</dd_do>>

<<dd_graph: saving("cif_2_3.png") replace height(300)>>

/*
### Regression 3

~~~~
<<dd_do>>
stcrreg b5.f_country i.sex##i.age_cat2, base compete(dtg_comp == 2) nopvalues cformat(%9,2f)
<</dd_do>>
~~~~

<<dd_do:quietly>>
stcurve, cif 
<</dd_do>>

<<dd_graph: saving("cif_3_1.png") replace height(300)>>

<<dd_do:quietly>>
stcurve, cif at(f_country = (1 2 3 4 5 6))
<</dd_do>>

<<dd_graph: saving("cif_3_2.png") replace height(300)>>
*/